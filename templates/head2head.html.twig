{%  include 'base.html.twig' %}

{% block body %}
    <div class="container" id="wrestlers" data-wrestlers="{{ wrestlers }}">
        <div class="h-100 p-5 m-3 text-bg-dark rounded-3">
            <h2>Makuuchi head-to-heads</h2>
            <p class="lead">Select a wrestler to see how well they do against others in the division
                <a class="header-link" href="https://sumo-api.com" target="_blank">Data from Sumo API</a>
            </p>
        </div>
        {% verbatim %}
        <div id="app">
            <div class="row">
                <div class="col-sm-6 mb-3 mb-sm-0">
                    <selected-wrestler :selected="selected"></selected-wrestler>
                </div>
            </div>
            <div class="row">
                <head2head v-for="head2head in wrestlers.head2heads"
                    @selected="onHead2HeadSelected"
                    :head2head="head2head"
                    :selected-wrestler="selected"
                    ></head2head>
            </div>
        </div>
        {% endverbatim %}
    </div>
{%  endblock %}

{% block javascripts %}
    <script type="module">
        import { createApp } from 'vue'
        import selectedWrestler from "{{ asset('../assets/js/components/selected-wrestler.js') }}"
        import head2head from "{{ asset('../assets/js/components/head2head.js') }}"
        import Head2HeadCollection from "{{ asset('../assets/js/head2head-collection.js') }}"

        const app = createApp({
            data() {
                return {
                    wrestlers: [],
                    selected: ''
                }
            },
            mounted() {
                this.wrestlers = new Head2HeadCollection(
                    JSON.parse(document.getElementById('wrestlers').dataset.wrestlers)
                );
            },
            methods: {
                async onHead2HeadSelected(id) {
                    const response = await fetch('/head2head/' + id)
                    const json = await response.json()

                    this.wrestlers.refreshHead2HeadData(JSON.parse(json))
                    this.wrestlers.sort()
                    this.selected = this.wrestlers.find(id)
                }
            }
        })
        app.component('selectedWrestler', selectedWrestler)
        app.component('head2head', head2head)
        app.mount('#app')
    </script>
{% endblock %}
